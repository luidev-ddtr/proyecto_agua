<div class="max-w-lg p-6 bg-[#035cb6] rounded-lg shadow-md ml-4 mt-20">
  <h2 class="text-2xl font-bold mb-6 text-white text-center">Toma de Agua</h2>

  <form
    id="tomaAguaForm"
    class="space-y-4"
  >
    <!-- Campo Ubicación -->
    <div>
      <label for="ubicacion" class="block text-sm font-medium text-white">Ubicación (Calle)*</label>
      <input
        type="text"
        id="ubicacion"
        name="ubicacion"
        class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 bg-white text-gray-800"
        placeholder="Ej: Calle 5"
      >
      <p id="error-ubicacion" class="mt-1 text-yellow-200 text-sm hidden"></p>
    </div>

    <!-- Campo Personas -->
    <div>
      <label for="personas" class="block text-sm font-medium text-white">Personas que la usan*</label>
      <input
        type="number"
        id="personas"
        name="personas"
        min="1"
        class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 bg-white text-gray-800"
        placeholder="Ej: 4"
      >
      <p id="error-personas" class="mt-1 text-yellow-200 text-sm hidden"></p>
    </div>

    <!-- Campo Manzana -->
    <div class="relative">
      <label for="manzana" class="block text-sm font-medium text-white">Manzana*</label>
      <select
        id="manzana"
        name="manzana"
        class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 bg-white text-gray-800 appearance-none pr-10"
      >
        <option value="" disabled selected class="text-gray-400">Seleccione una manzana</option>
        <option value="Centro" class="text-gray-800">Centro</option>
        <option value="Garambullo" class="text-gray-800">Garambullo</option>
        <option value="Yondha" class="text-gray-800">Yondha</option>
        <option value="Cerritos" class="text-gray-800">Cerritos</option>
        <option value="Tepetate" class="text-gray-800">Tepetate</option>
        <option value="Buena vista" class="text-gray-800">Buena vista</option>
      </select>
      <div class="absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none mt-6">
        <svg class="h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
          <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
        </svg>
      </div>
      <p id="error-manzana" class="mt-1 text-yellow-200 text-sm hidden"></p>
    </div>

    <!-- Campo Descripción -->
    <div>
      <label for="descripcion" class="block text-sm font-medium text-white">Descripción</label>
      <textarea
        id="descripcion"
        name="descripcion"
        rows="3"
        placeholder="Escriba detalles adicionales si lo desea"
        class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 bg-white text-gray-800 resize-none"
      ></textarea>
    </div>

    <!-- Botón -->
    <div>
      <button
        type="submit"
        id="submitBtn"
        class="w-full inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-[#1a4b8c] hover:bg-[#163d6f] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition duration-300"
      >Enviar</button>
    </div>
  </form>
</div>

<script is:inline>
  document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('tomaAguaForm');
    const submitBtn = document.getElementById('submitBtn');
    
    // API endpoint - asegúrate de que API_ENDPOINT esté definido globalmente
    const API_ENDPOINT ="http://localhost:5000/api";
    const apiUrl = `${API_ENDPOINT}/create_toma`;

    form.addEventListener('submit', async function(e) {
        e.preventDefault();
        
        // Validar campos
        if (!validateForm()) {
            return;
        }
        
        // Deshabilitar botón y cambiar texto
        submitBtn.disabled = true;
        submitBtn.textContent = 'Enviando...';
        
        try {
            // Obtener datos del formulario
            const formData = getFormData();
            
            // Enviar datos al backend
            const response = await fetch(apiUrl, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(formData)
            });
            
            if (!response.ok) {
                throw new Error(`Error HTTP: ${response.status}`);
            }
            
            const data = await response.json();
            console.log('Respuesta del servidor:', data);
            
            // Mostrar mensaje de éxito y resetear formulario
            alert('Toma de agua registrada con éxito');
            form.reset();
            
        } catch (error) {
            console.error('Error al enviar el formulario:', error);
            alert('Hubo un error al enviar el formulario. Por favor, inténtalo de nuevo.');
        } finally {
            // Restaurar botón
            submitBtn.disabled = false;
            submitBtn.textContent = 'Enviar';
        }
    });
    
    function validateForm() {
        let isValid = true;
        
        // Validar ubicación
        const ubicacion = document.getElementById('ubicacion').value.trim();
        const errorUbicacion = document.getElementById('error-ubicacion');
        if (!ubicacion) {
            errorUbicacion.textContent = 'Ingrese una ubicación válida';
            errorUbicacion.classList.remove('hidden');
            isValid = false;
        } else {
            errorUbicacion.classList.add('hidden');
        }
        
        // Validar personas
        const personas = document.getElementById('personas').value.trim();
        const errorPersonas = document.getElementById('error-personas');
        if (!personas || isNaN(personas) || parseInt(personas) <= 0) {
            errorPersonas.textContent = 'Ingrese un número válido de personas (mayor que 0)';
            errorPersonas.classList.remove('hidden');
            isValid = false;
        } else {
            errorPersonas.classList.add('hidden');
        }
        
        // Validar manzana
        const manzana = document.getElementById('manzana').value;
        const errorManzana = document.getElementById('error-manzana');
        if (!manzana) {
            errorManzana.textContent = 'Seleccione una manzana';
            errorManzana.classList.remove('hidden');
            isValid = false;
        } else {
            errorManzana.classList.add('hidden');
        }
        
        return isValid;
    }
    
    function getFormData() {
        const ubicacion = document.getElementById('ubicacion').value.trim();
        const personas = parseInt(document.getElementById('personas').value.trim());
        const manzana = document.getElementById('manzana').value;
        const descripcion = document.getElementById('descripcion').value.trim();
        
        // Combinar ubicación, manzana y descripción en un solo campo como especificado
        const ubicacionCompleta = `${ubicacion}, Manzana ${manzana}${descripcion ? ` (${descripcion})` : ''}`;
        
        return {
            ubicacion: ubicacionCompleta,
            usan_personas: personas
        };
    }
});
</script>