---
// src/pages/mostrar.astro
import MostrarPersonas from "../../../components/crud/personas/MostrarPersonas.astro";
import Layout from "../../../layouts/Layout.astro";
const BASE_URL = import.meta.env.VITE_BASE_URL || '';
---

<Layout>
  <main class="relative flex flex-col" style="min-height: 100vh;">
    <!-- Fondo -->
    <div 
    class="fixed inset-0 bg-cover bg-center bg-no-repeat -z-10"
    style={`background-image: url('${BASE_URL}/fondoForm.webp')`}
  ></div>
  
    <!-- Contenido -->
    <div class="flex flex-1 w-full pb-8">
      <div class="w-1/12"></div>
      
      <div class="w-10/12 flex flex-col">
        <!-- Barra de Búsqueda -->
        <div class="w-full p-4 bg-blue-700 rounded-t-lg sticky top-0 z-10">
          <div 
            x-data="searchBar()" 
            x-init="initObserver"
            class="relative"
          >
            <div class="flex items-center gap-2">
              <input 
                type="text" 
                x-model="searchTerm"
                @input.debounce.300ms="highlightMatches"
                placeholder="Buscar en todos los campos..."
                class="flex-1 p-2 rounded border border-blue-300 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-white"
              >
              <button 
                x-show="searchTerm" 
                @click="searchTerm = ''; clearHighlight();" 
                class="p-2 text-gray-600 hover:text-gray-800 bg-white rounded"
              >
                ✕ Limpiar
              </button>
            </div>
            
            <div 
              x-show="searchTerm.length > 1" 
              class="text-sm text-white mt-1 flex justify-between"
            >
              <span>
                <span x-text="document.querySelectorAll('.min-w-full.bg-white tbody tr.bg-yellow-100').length"></span> 
                resultados
              </span>
              <span class="text-blue-200">
                Buscando: "<span x-text="searchTerm"></span>"
              </span>
            </div>
          </div>
        </div>
        
        <!-- Tabla -->
        <div class="flex-1 w-full p-6 bg-blue-800 rounded-b-lg shadow-md overflow-y-auto">
          <MostrarPersonas />
        </div>
      </div>
      
      <div class="w-1/12"></div>
    </div>
  </main>
</Layout>

<script is:inline>
  function searchBar() {
    return {
      searchTerm: '',
      lastSearch: '',
      
      highlightMatches() {
        if (this.searchTerm.length < 3) {
          this.clearHighlight();
          return;
        }
        
        if (this.searchTerm === this.lastSearch) return;
        this.lastSearch = this.searchTerm;
        
        const searchTerm = this.searchTerm.toLowerCase();
        const table = document.querySelector('.min-w-full.bg-white');
        if (!table) return;
        
        const rows = table.querySelectorAll('tbody tr');
        let firstMatch = null;
        
        rows.forEach(row => {
          const rowText = row.textContent.toLowerCase();
          if (rowText.includes(searchTerm)) {
            row.classList.add('bg-yellow-100', 'border-l-4', 'border-yellow-500');
            if (!firstMatch) firstMatch = row;
          } else {
            row.classList.remove('bg-yellow-100', 'border-l-4', 'border-yellow-500');
          }
        });
        
        if (firstMatch) {
          firstMatch.scrollIntoView({ behavior: 'smooth', block: 'nearest' });
        }
      },
      
      clearHighlight() {
        const table = document.querySelector('.min-w-full.bg-white');
        if (!table) return;
        
        table.querySelectorAll('tbody tr').forEach(row => {
          row.classList.remove('bg-yellow-100', 'border-l-4', 'border-yellow-500');
        });
        this.lastSearch = '';
      },
      
      initObserver() {
        const observer = new MutationObserver(() => {
          if (this.searchTerm) this.highlightMatches();
        });
        
        const tableContainer = document.querySelector('.overflow-x-auto');
        if (tableContainer) {
          observer.observe(tableContainer, { 
            childList: true, 
            subtree: true 
          });
        }
      }
    }
  }
</script>

<style is:global>
  .min-w-full.bg-white tbody tr.bg-yellow-100 {
    background-color: #fef9c3 !important;
    border-left: 4px solid #f59e0b !important;
  }
  
  .min-w-full.bg-white tbody tr.bg-yellow-100 td {
    color: #1e3a8a !important;
    font-weight: 500 !important;
  }
  
  .min-w-full.bg-white tbody tr.bg-yellow-100:hover {
    background-color: #fef08a !important;
  }
</style>